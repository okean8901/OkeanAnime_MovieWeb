@model Okean_AnimeMovie.Core.Entities.Anime

<div id="comments-container">
    <h6 class="mb-3">Bình luận (@(Model.Comments?.Count ?? 0))</h6>

    <div class="list-group mb-3">
        @if (Model.Comments != null && Model.Comments.Any())
        {
            foreach (var c in Model.Comments.OrderByDescending(c => c.CreatedAt))
            {
                <div class="list-group-item">
                    <div class="d-flex justify-content-between">
                        <strong>@(c.User != null ? c.User.UserName : "Người dùng")</strong>
                        <small class="text-muted">@c.CreatedAt.ToLocalTime().ToString("g")</small>
                    </div>
                    <div>@c.Content</div>
                </div>
            }
        }
        else
        {
            <div class="list-group-item text-muted">Chưa có bình luận nào.</div>
        }
    </div>

    @if (User.Identity?.IsAuthenticated == true)
    {
        <form id="commentForm" onsubmit="return submitComment(event);">
            <input type="hidden" id="animeId" value="@Model.Id" />
            <div class="input-group">
                <input type="text" id="commentContent" class="form-control" placeholder="Viết bình luận..." required />
                <button type="submit" class="btn btn-primary">
                    <i class="bi bi-send"></i>
                </button>
            </div>
        </form>
    }
    else
    {
        <div class="alert alert-info">Vui lòng <a asp-controller="Account" asp-action="Login">đăng nhập</a> để bình luận.</div>
    }
</div>

<script>
    async function submitComment(e) {
        e.preventDefault();
        const animeId = document.getElementById('animeId').value;
        const content = document.getElementById('commentContent').value.trim();
        if (!content) return false;

        const res = await fetch(`@Url.Action("AddComment", "Anime")?animeId=${animeId}`, {
            method: 'POST',
            headers: { 'Content-Type': 'application/x-www-form-urlencoded', 'RequestVerificationToken': getCsrfToken() },
            body: `content=${encodeURIComponent(content)}`
        });
        if (res.ok) {
            const html = await res.text();
            document.getElementById('comments-container').outerHTML = html;
        }
        return false;
    }

    function getCsrfToken() {
        const tokenInput = document.querySelector('input[name="__RequestVerificationToken"]');
        return tokenInput ? tokenInput.value : '';
    }
</script>
