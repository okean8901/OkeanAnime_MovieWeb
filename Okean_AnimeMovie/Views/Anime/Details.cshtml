@model Okean_AnimeMovie.Core.Entities.Anime

@{
    ViewData["Title"] = Model.Title;
    bool isFavorite = ViewBag.IsFavorite == true;

    string? rawTrailer = Model.Trailer;
    string? embedTrailer = null;
    if (!string.IsNullOrWhiteSpace(rawTrailer))
    {
        try
        {
            var uri = new Uri(rawTrailer);
            var host = uri.Host.ToLowerInvariant();

            if (host.Contains("youtube.com") || host.Contains("youtu.be"))
            {
                // Handle various YouTube formats -> https://www.youtube.com/embed/{id}
                string? videoId = null;
                if (host.Contains("youtu.be"))
                {
                    videoId = uri.AbsolutePath.Trim('/');
                }
                else if (uri.AbsolutePath.StartsWith("/watch", StringComparison.OrdinalIgnoreCase))
                {
                    var query = System.Web.HttpUtility.ParseQueryString(uri.Query);
                    videoId = query.Get("v");
                }
                else if (uri.AbsolutePath.StartsWith("/embed/", StringComparison.OrdinalIgnoreCase))
                {
                    videoId = uri.AbsolutePath.Replace("/embed/", string.Empty).Trim('/');
                }
                if (!string.IsNullOrWhiteSpace(videoId))
                {
                    embedTrailer = $"https://www.youtube.com/embed/{videoId}";
                }
            }
            else if (host.Contains("drive.google.com"))
            {
                var parts = uri.AbsolutePath.Split('/', StringSplitOptions.RemoveEmptyEntries);
                var idx = Array.FindIndex(parts, p => p.Equals("d", StringComparison.OrdinalIgnoreCase));
                if (idx >= 0 && idx + 1 < parts.Length)
                {
                    var fileId = parts[idx + 1];
                    embedTrailer = $"https://drive.google.com/file/d/{fileId}/preview";
                }
            }
            else
            {
                embedTrailer = rawTrailer;
            }
        }
        catch { }
    }
}

@Html.AntiForgeryToken()

<div class="container my-4">
    <div class="row g-4">
        <!-- LEFT: Poster + Meta -->
        <div class="col-lg-4">
            <div class="card border-0 shadow-sm rounded-4 overflow-hidden">
                <div class="bg-secondary d-flex align-items-center justify-content-center" style="height: 420px;">
                    @if (!string.IsNullOrEmpty(Model.Poster))
                    {
                        <img src="@Model.Poster" class="img-fluid" alt="@Model.Title" style="max-height: 100%; object-fit: cover;">
                    }
                    else
                    {
                        <i class="bi bi-image text-light display-4"></i>
                    }
                </div>
                <div class="card-body">
                    <h4 class="fw-bold mb-1">@Model.Title</h4>
                    @if (!string.IsNullOrEmpty(Model.AlternativeTitle))
                    {
                        <div class="text-muted small mb-2">@Model.AlternativeTitle</div>
                    }
                    <div class="d-flex flex-wrap gap-2 mb-3">
                        @foreach (var ag in Model.AnimeGenres)
                        {
                            <span class="badge rounded-pill bg-primary">@ag.Genre.Name</span>
                        }
                    </div>
                    <div class="d-flex justify-content-between mb-2 small">
                        <span class="badge bg-info">@Model.Type</span>
                        <span class="text-muted">@Model.ReleaseYear</span>
                    </div>
                    <div class="mb-3">
                        @await Html.PartialAsync("_RatingPartial", Model)
                    </div>
                    @if (User.Identity?.IsAuthenticated == true)
                    {
                        <div class="d-grid">
                            <button id="favToggleBtn" type="button" class="btn @(isFavorite ? "btn-danger" : "btn-outline-primary")" data-fav="@(isFavorite.ToString().ToLower())">
                                <i class="bi @(isFavorite ? "bi-heart-fill" : "bi-heart") me-2"></i>
                                <span>@(isFavorite ? "Xóa khỏi Yêu thích" : "Thêm vào Yêu thích")</span>
                            </button>
                        </div>
                    }
                    else
                    {
                        <a asp-controller="Account" asp-action="Login" class="btn btn-outline-primary w-100">Đăng nhập để yêu thích</a>
                    }

                    @if (User.IsInRole("Admin"))
                    {
                        <a class="btn btn-outline-secondary w-100 mt-2" asp-controller="Episodes" asp-action="Index" asp-route-animeId="@Model.Id">
                            <i class="bi bi-collection-play me-2"></i>Quản lý Tập phim
                        </a>
                    }
                </div>
            </div>
        </div>

        <!-- RIGHT: Tabs -->
        <div class="col-lg-8">
            <div class="card border-0 shadow-sm rounded-4">
                <div class="card-body p-0">
                    <ul class="nav nav-pills p-3 gap-2" id="animeTab" role="tablist">
                        <li class="nav-item" role="presentation">
                            <button class="nav-link active" id="overview-tab" data-bs-toggle="pill" data-bs-target="#overview" type="button" role="tab">Tổng quan</button>
                        </li>
                        <li class="nav-item" role="presentation">
                            <button class="nav-link" id="trailer-tab" data-bs-toggle="pill" data-bs-target="#trailer" type="button" role="tab">Trailer</button>
                        </li>
                        <li class="nav-item" role="presentation">
                            <button class="nav-link" id="episodes-tab" data-bs-toggle="pill" data-bs-target="#episodes" type="button" role="tab">Tập phim</button>
                        </li>
                        <li class="nav-item" role="presentation">
                            <button class="nav-link" id="comments-tab" data-bs-toggle="pill" data-bs-target="#comments" type="button" role="tab">Bình luận</button>
                        </li>
                    </ul>
                    <div class="tab-content p-3 pt-0">
                        <!-- Overview -->
                        <div class="tab-pane fade show active" id="overview" role="tabpanel">
                            <div class="card border-0">
                                <div class="card-body">
                                    <h5 class="mb-3">Tóm tắt</h5>
                                    <p class="mb-0 text-secondary" style="line-height: 1.8;">@Model.Description</p>
                                </div>
                            </div>
                        </div>
                        <!-- Trailer -->
                        <div class="tab-pane fade" id="trailer" role="tabpanel">
                            <div class="card border-0">
                                <div class="card-body">
                                    @if (!string.IsNullOrEmpty(Model.Trailer) && !string.IsNullOrWhiteSpace(embedTrailer))
                                    {
                                        <div class="ratio ratio-16x9 rounded-3 overflow-hidden shadow-sm">
                                            <iframe src="@embedTrailer" title="Trailer" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen referrerpolicy="strict-origin-when-cross-origin"></iframe>
                                        </div>
                                    }
                                    else if (!string.IsNullOrEmpty(Model.Trailer))
                                    {
                                        <div class="alert alert-warning d-flex align-items-center" role="alert">
                                            <i class="bi bi-exclamation-triangle me-2"></i>
                                            <div>
                                                Nhà cung cấp này không cho phép nhúng. Mở trực tiếp:
                                                <a href="@Model.Trailer" target="_blank" rel="noopener">Mở trailer</a>
                                            </div>
                                        </div>
                                    }
                                    else
                                    {
                                        <div class="text-muted">Chưa có trailer.</div>
                                    }
                                </div>
                            </div>
                        </div>
                        <!-- Episodes -->
                        <div class="tab-pane fade" id="episodes" role="tabpanel">
                            <div class="card border-0">
                                <div class="card-body">
                                    @if (Model.Episodes.Any())
                                    {
                                        <div class="list-group list-group-flush">
                                            @foreach (var ep in Model.Episodes.OrderBy(e => e.EpisodeNumber))
                                            {
                                                <a asp-action="Watch" asp-route-animeId="@Model.Id" asp-route-episodeNumber="@ep.EpisodeNumber" class="list-group-item list-group-item-action d-flex justify-content-between align-items-center">
                                                    <span>Tập @ep.EpisodeNumber - @ep.Title</span>
                                                    <i class="bi bi-play-circle"></i>
                                                </a>
                                            }
                                        </div>
                                    }
                                    else
                                    {
                                        <p class="text-muted mb-0">Chưa có tập phim nào.</p>
                                    }
                                </div>
                            </div>
                        </div>
                        <!-- Comments -->
                        <div class="tab-pane fade" id="comments" role="tabpanel">
                            <div class="card border-0">
                                <div class="card-body">
                                    @await Html.PartialAsync("_CommentsPartial", Model)
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const btn = document.getElementById('favToggleBtn');
            if (!btn) return;
            btn.addEventListener('click', async function () {
                try {
                    btn.classList.add('loading');
                    const res = await fetch('/Favorites/Toggle?animeId=@Model.Id', {
                        method: 'POST'
                    });
                    if (!res.ok) return;
                    const data = await res.json();
                    if (data.success) {
                        const isFav = data.isFavorite === true;
                        btn.dataset.fav = isFav ? 'true' : 'false';
                        btn.classList.toggle('btn-outline-primary', !isFav);
                        btn.classList.toggle('btn-danger', isFav);
                        const icon = btn.querySelector('i');
                        const label = btn.querySelector('span');
                        if (icon) icon.className = isFav ? 'bi bi-heart-fill me-2' : 'bi bi-heart me-2';
                        if (label) label.textContent = isFav ? 'Xóa khỏi Yêu thích' : 'Thêm vào Yêu thích';
                        const badge = document.getElementById('favCountBadge');
                        if (badge) {
                            const count = data.count ?? 0;
                            if (count > 0) {
                                badge.textContent = count;
                                badge.classList.remove('d-none');
                            } else {
                                badge.classList.add('d-none');
                            }
                        }
                    }
                } catch (e) {
                    console.error(e);
                } finally {
                    btn.classList.remove('loading');
                }
            });
        });
    </script>
    <style>
        .nav-pills .nav-link {
            border-radius: 999px;
            padding: 0.5rem 1rem;
        }
        .list-group-item {
            border-left: 0; border-right: 0;
        }
    </style>
}
